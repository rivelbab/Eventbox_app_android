{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "b094cbbd1ce4f4699900ff443f84b730",
    "entities": [
      {
        "tableName": "Event",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `identifier` TEXT NOT NULL, `description` TEXT, `locationName` TEXT, `startsAt` TEXT NOT NULL, `endsAt` TEXT NOT NULL, `codeOfConduct` TEXT, `createdAt` TEXT, `deletedAt` TEXT, `isComplete` INTEGER NOT NULL, `privacy` TEXT NOT NULL, `thumbnailImageUrl` TEXT, `originalImageUrl` TEXT, `largeImageUrl` TEXT, `ownerDescription` TEXT, `ownerName` TEXT, `hasOwnerInfo` INTEGER NOT NULL, `timezone` TEXT NOT NULL, `latitude` REAL, `longitude` REAL, `isMapShown` INTEGER NOT NULL, `favorite` INTEGER NOT NULL, `favoriteEventId` INTEGER, `interested` INTEGER NOT NULL, `interestedEventId` INTEGER, `paymentCurrency` TEXT, `paymentCountry` TEXT, `paypalEmail` TEXT, `ticketUrl` TEXT, `refundPolicy` TEXT, `canPayByStripe` INTEGER NOT NULL, `canPayByBank` INTEGER NOT NULL, `canPayByPaypal` INTEGER NOT NULL, `canPayOnsite` INTEGER NOT NULL, `isTicketingEnabled` INTEGER NOT NULL, `isTaxEnabled` INTEGER NOT NULL, `eventType` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "locationName",
            "columnName": "locationName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startsAt",
            "columnName": "startsAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "endsAt",
            "columnName": "endsAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "codeOfConduct",
            "columnName": "codeOfConduct",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deletedAt",
            "columnName": "deletedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isComplete",
            "columnName": "isComplete",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "privacy",
            "columnName": "privacy",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "thumbnailImageUrl",
            "columnName": "thumbnailImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "originalImageUrl",
            "columnName": "originalImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "largeImageUrl",
            "columnName": "largeImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ownerDescription",
            "columnName": "ownerDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ownerName",
            "columnName": "ownerName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hasOwnerInfo",
            "columnName": "hasOwnerInfo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timezone",
            "columnName": "timezone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "isMapShown",
            "columnName": "isMapShown",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favorite",
            "columnName": "favorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favoriteEventId",
            "columnName": "favoriteEventId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "interested",
            "columnName": "interested",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "interestedEventId",
            "columnName": "interestedEventId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "paymentCurrency",
            "columnName": "paymentCurrency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "paymentCountry",
            "columnName": "paymentCountry",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "paypalEmail",
            "columnName": "paypalEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ticketUrl",
            "columnName": "ticketUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "refundPolicy",
            "columnName": "refundPolicy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "canPayByStripe",
            "columnName": "canPayByStripe",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "canPayByBank",
            "columnName": "canPayByBank",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "canPayByPaypal",
            "columnName": "canPayByPaypal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "canPayOnsite",
            "columnName": "canPayOnsite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTicketingEnabled",
            "columnName": "isTicketingEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTaxEnabled",
            "columnName": "isTaxEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventType",
            "columnName": "eventType",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_Event_eventType",
            "unique": false,
            "columnNames": [
              "eventType"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Event_eventType` ON `${TABLE_NAME}` (`eventType`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "User",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `firstName` TEXT, `lastName` TEXT, `email` TEXT, `details` TEXT, `phone` TEXT, `thumbnailImageUrl` TEXT, `iconImageUrl` TEXT, `smallImageUrl` TEXT, `avatarUrl` TEXT, `originalImageUrl` TEXT, `isVerified` INTEGER NOT NULL, `isAdmin` INTEGER, `isSuperAdmin` INTEGER, `createdAt` TEXT, `lastAccessedAt` TEXT, `deletedAt` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "details",
            "columnName": "details",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailImageUrl",
            "columnName": "thumbnailImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iconImageUrl",
            "columnName": "iconImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "smallImageUrl",
            "columnName": "smallImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatarUrl",
            "columnName": "avatarUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "originalImageUrl",
            "columnName": "originalImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isVerified",
            "columnName": "isVerified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAdmin",
            "columnName": "isAdmin",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isSuperAdmin",
            "columnName": "isSuperAdmin",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastAccessedAt",
            "columnName": "lastAccessedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deletedAt",
            "columnName": "deletedAt",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Ticket",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `description` TEXT, `type` TEXT, `name` TEXT NOT NULL, `maxOrder` INTEGER NOT NULL, `isFeeAbsorbed` INTEGER, `isDescriptionVisible` INTEGER, `price` REAL NOT NULL, `position` TEXT, `quantity` TEXT, `isHidden` INTEGER, `salesStartsAt` TEXT, `salesEndsAt` TEXT, `minOrder` INTEGER NOT NULL, `event` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY(`event`) REFERENCES `Event`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "maxOrder",
            "columnName": "maxOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFeeAbsorbed",
            "columnName": "isFeeAbsorbed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isDescriptionVisible",
            "columnName": "isDescriptionVisible",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isHidden",
            "columnName": "isHidden",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "salesStartsAt",
            "columnName": "salesStartsAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "salesEndsAt",
            "columnName": "salesEndsAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "minOrder",
            "columnName": "minOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "event",
            "columnName": "event",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_Ticket_event",
            "unique": false,
            "columnNames": [
              "event"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Ticket_event` ON `${TABLE_NAME}` (`event`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Event",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "event"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Attendee",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `firstname` TEXT, `lastname` TEXT, `email` TEXT, `address` TEXT, `city` TEXT, `phone` TEXT, `gender` TEXT, `billingAddress` TEXT, `isCheckedIn` INTEGER, `checkinTimes` TEXT, `isCheckedOut` INTEGER NOT NULL, `ticketId` TEXT, `checkedIn` TEXT, `checkedOut` TEXT, `event` INTEGER, `ticket` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY(`event`) REFERENCES `Event`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`ticket`) REFERENCES `Ticket`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "firstname",
            "columnName": "firstname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastname",
            "columnName": "lastname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "billingAddress",
            "columnName": "billingAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCheckedIn",
            "columnName": "isCheckedIn",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "checkinTimes",
            "columnName": "checkinTimes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCheckedOut",
            "columnName": "isCheckedOut",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ticketId",
            "columnName": "ticketId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "checkedIn",
            "columnName": "checkedIn",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "checkedOut",
            "columnName": "checkedOut",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "event",
            "columnName": "event",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "ticket",
            "columnName": "ticket",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_Attendee_event",
            "unique": false,
            "columnNames": [
              "event"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Attendee_event` ON `${TABLE_NAME}` (`event`)"
          },
          {
            "name": "index_Attendee_ticket",
            "unique": false,
            "columnNames": [
              "ticket"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Attendee_ticket` ON `${TABLE_NAME}` (`ticket`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Event",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "event"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "Ticket",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "ticket"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Order",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `paymentMode` TEXT, `country` TEXT, `status` TEXT, `amount` REAL NOT NULL, `identifier` TEXT, `orderNotes` TEXT, `completedAt` TEXT, `state` TEXT, `city` TEXT, `address` TEXT, `createdAt` TEXT, `zipcode` TEXT, `paidVia` TEXT, `discountCodeId` TEXT, `ticketsPdfUrl` TEXT, `transactionId` TEXT, `isBillingEnabled` INTEGER NOT NULL, `taxBusinessInfo` TEXT, `company` TEXT, `isExpired` INTEGER, `event` INTEGER, `attendees` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentMode",
            "columnName": "paymentMode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "orderNotes",
            "columnName": "orderNotes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "zipcode",
            "columnName": "zipcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "paidVia",
            "columnName": "paidVia",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discountCodeId",
            "columnName": "discountCodeId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ticketsPdfUrl",
            "columnName": "ticketsPdfUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isBillingEnabled",
            "columnName": "isBillingEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "taxBusinessInfo",
            "columnName": "taxBusinessInfo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "company",
            "columnName": "company",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isExpired",
            "columnName": "isExpired",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "event",
            "columnName": "event",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attendees",
            "columnName": "attendees",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_Order_event",
            "unique": false,
            "columnNames": [
              "event"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Order_event` ON `${TABLE_NAME}` (`event`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CustomForm",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `form` TEXT NOT NULL, `fieldIdentifier` TEXT NOT NULL, `type` TEXT NOT NULL, `isRequired` INTEGER NOT NULL, `isIncluded` INTEGER NOT NULL, `isFixed` INTEGER, `ticketsNumber` INTEGER, `event` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY(`event`) REFERENCES `Event`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "form",
            "columnName": "form",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fieldIdentifier",
            "columnName": "fieldIdentifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isRequired",
            "columnName": "isRequired",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isIncluded",
            "columnName": "isIncluded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFixed",
            "columnName": "isFixed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "ticketsNumber",
            "columnName": "ticketsNumber",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "event",
            "columnName": "event",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "Event",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "event"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Feedback",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `rating` TEXT, `comment` TEXT, `event` INTEGER, `user` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "event",
            "columnName": "event",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "user",
            "columnName": "user",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Notification",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `message` TEXT, `receivedAt` TEXT, `isRead` INTEGER NOT NULL, `title` TEXT, `deletedAt` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "receivedAt",
            "columnName": "receivedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isRead",
            "columnName": "isRead",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deletedAt",
            "columnName": "deletedAt",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Settings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `appName` TEXT, `tagline` TEXT, `isPaypalActivated` INTEGER NOT NULL, `isStripeActivated` INTEGER NOT NULL, `isOmiseActivated` INTEGER NOT NULL, `frontendUrl` TEXT, `cookiePolicy` TEXT, `cookiePolicyLink` TEXT, `orderExpiryTime` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "appName",
            "columnName": "appName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tagline",
            "columnName": "tagline",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isPaypalActivated",
            "columnName": "isPaypalActivated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isStripeActivated",
            "columnName": "isStripeActivated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isOmiseActivated",
            "columnName": "isOmiseActivated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "frontendUrl",
            "columnName": "frontendUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cookiePolicy",
            "columnName": "cookiePolicy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cookiePolicyLink",
            "columnName": "cookiePolicyLink",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "orderExpiryTime",
            "columnName": "orderExpiryTime",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Tax",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `name` TEXT, `rate` REAL, `taxId` TEXT, `registeredCompany` TEXT, `address` TEXT, `city` TEXT, `stare` TEXT, `zip` TEXT, `invoiceFooter` TEXT, `isInvoiceSend` INTEGER NOT NULL, `isTaxIncludedInPrice` INTEGER NOT NULL, `shouldSendInvoice` INTEGER NOT NULL, `eventId` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rate",
            "columnName": "rate",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "taxId",
            "columnName": "taxId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "registeredCompany",
            "columnName": "registeredCompany",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "stare",
            "columnName": "stare",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "zip",
            "columnName": "zip",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "invoiceFooter",
            "columnName": "invoiceFooter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isInvoiceSend",
            "columnName": "isInvoiceSend",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTaxIncludedInPrice",
            "columnName": "isTaxIncludedInPrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shouldSendInvoice",
            "columnName": "shouldSendInvoice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_Tax_eventId",
            "unique": false,
            "columnNames": [
              "eventId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Tax_eventId` ON `${TABLE_NAME}` (`eventId`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'b094cbbd1ce4f4699900ff443f84b730')"
    ]
  }
}